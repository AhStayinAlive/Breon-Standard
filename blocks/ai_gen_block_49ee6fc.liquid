{% doc %}
  @prompt
    Create a mobile-first carousel section called "The Broen Standard" with dark Apple-inspired design. Features: editable heading, unlimited card blocks with image/video media, title, subtext, and clickable links. Cards show 3-4 on desktop, 1 on mobile with swipe navigation. Include navigation arrows, pagination dots, and full Theme Editor customization. Cards have rounded corners, subtle shadows, and the entire card is clickable. Support both image and video content with proper aspect ratios. Use dark background (#0a0a0a), white text, and pill-shaped buttons. Make it accessible with keyboard navigation and proper ARIA labels. No hardcoding - everything editable in Theme Editor., Do not rebuild. Modify the current “Broen Standard / Card Rail” section only.
    A. Background & padding: add section settings background_color (color), padding_top (range), padding_bottom (range). Apply them to the outer section wrapper so I can see the color and spacing immediately.
    
    B. Mobile layout: enable native horizontal scroll with overflow-x:auto and scroll-snap-type:x mandatory. Each card should have scroll-snap-align:start and min-width:84vw on mobile.
    Leave everything else as is., The broen standard header should be separate from the card headers, Keep everything. Add left/right arrow buttons on desktop only (hide on <768px). On click, call track.scrollBy({ left: cardWidthPlusGap, behavior: 'smooth' }). Use accessible labels “Previous” and “Next”. Don’t add dots, don’t change block schema.
    
    Acceptance: arrows appear on desktop and move exactly one card at a time; mobile still swipeable.

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-broen-standard-{{ ai_gen_id }} {
    background-color: {{ block.settings.background_color }};
    padding: {{ block.settings.padding_top }}px 0 {{ block.settings.padding_bottom }}px;
    color: {{ block.settings.text_color }};
  }

  .ai-broen-standard-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-broen-standard-heading-{{ ai_gen_id }} {
    text-align: center;
    margin-bottom: 40px;
    font-size: {{ block.settings.heading_size }}px;
    font-weight: 600;
    color: {{ block.settings.heading_color }};
  }

  .ai-broen-standard-carousel-wrapper-{{ ai_gen_id }} {
    position: relative;
    overflow: hidden;
  }

  .ai-broen-standard-carousel-{{ ai_gen_id }} {
    display: flex;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    gap: {{ block.settings.card_gap }}px;
  }

  .ai-broen-standard-card-{{ ai_gen_id }} {
    flex: 0 0 calc(25% - {{ block.settings.card_gap | times: 0.75 }}px);
    background-color: {{ block.settings.card_background }};
    border-radius: {{ block.settings.card_border_radius }}px;
    overflow: hidden;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-decoration: none;
    color: inherit;
    display: block;
  }

  .ai-broen-standard-card-{{ ai_gen_id }}:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
  }

  .ai-broen-standard-card-media-{{ ai_gen_id }} {
    position: relative;
    width: 100%;
    aspect-ratio: {{ block.settings.media_aspect_ratio }};
    overflow: hidden;
  }

  .ai-broen-standard-card-media-{{ ai_gen_id }} img,
  .ai-broen-standard-card-media-{{ ai_gen_id }} video {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-broen-standard-card-content-{{ ai_gen_id }} {
    padding: 24px;
  }

  .ai-broen-standard-card-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.card_title_size }}px;
    font-weight: 600;
    margin-bottom: 12px;
    color: {{ block.settings.text_color }};
  }

  .ai-broen-standard-card-subtext-{{ ai_gen_id }} {
    font-size: {{ block.settings.card_subtext_size }}px;
    line-height: 1.5;
    color: {{ block.settings.subtext_color }};
    margin-bottom: 20px;
  }

  .ai-broen-standard-card-button-{{ ai_gen_id }} {
    display: inline-block;
    background-color: {{ block.settings.button_color }};
    color: {{ block.settings.button_text_color }};
    padding: 10px 20px;
    border-radius: 25px;
    text-decoration: none;
    font-size: 14px;
    font-weight: 500;
    transition: background-color 0.3s ease;
  }

  .ai-broen-standard-card-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.button_hover_color }};
  }

  .ai-broen-standard-navigation-{{ ai_gen_id }} {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 30px;
  }

  .ai-broen-standard-nav-button-{{ ai_gen_id }} {
    background-color: rgba(255, 255, 255, 0.1);
    border: none;
    border-radius: 50%;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: background-color 0.3s ease;
    color: {{ block.settings.text_color }};
  }

  .ai-broen-standard-nav-button-{{ ai_gen_id }}:hover {
    background-color: rgba(255, 255, 255, 0.2);
  }

  .ai-broen-standard-nav-button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-broen-standard-pagination-{{ ai_gen_id }} {
    display: flex;
    gap: 8px;
    align-items: center;}

  .ai-broen-standard-dot-{{ ai_gen_id }} {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3);
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .ai-broen-standard-dot-{{ ai_gen_id }}.active {
    background-color: {{ block.settings.text_color }};
  }

  .ai-broen-standard-media-placeholder-{{ ai_gen_id }} {
    background-color: #1a1a1a;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #666;
  }

  .ai-broen-standard-media-placeholder-{{ ai_gen_id }} svg {
    width: 60px;
    height: 60px;
    opacity: 0.5;
  }

  @media screen and (max-width: 1024px) {
    .ai-broen-standard-card-{{ ai_gen_id }} {
      flex: 0 0 calc(33.333% - {{ block.settings.card_gap | times: 0.667 }}px);
    }
  }

  @media screen and (max-width: 768px) {
    .ai-broen-standard-carousel-wrapper-{{ ai_gen_id }} {
      overflow-x: auto;
      overflow-y: hidden;
      scroll-snap-type: x mandatory;
      -webkit-overflow-scrolling: touch;
    }

    .ai-broen-standard-carousel-{{ ai_gen_id }} {
      transform: none !important;
    }

    .ai-broen-standard-card-{{ ai_gen_id }} {
      flex: 0 0 84vw;
      min-width: 84vw;
      scroll-snap-align: start;
    }

    .ai-broen-standard-container-{{ ai_gen_id }} {
      padding: 0 16px;
    }

    .ai-broen-standard-heading-{{ ai_gen_id }} {
      font-size: {{ block.settings.heading_size | times: 0.8 }}px;
      margin-bottom: 30px;
    }

    .ai-broen-standard-card-content-{{ ai_gen_id }} {
      padding: 20px;
    }

    .ai-broen-standard-navigation-{{ ai_gen_id }} {
      display: none;
    }
  }
{% endstyle %}

<broen-standard-carousel-{{ ai_gen_id }}
  class="ai-broen-standard-{{ ai_gen_id }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-broen-standard-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-broen-standard-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}

    <div class="ai-broen-standard-carousel-wrapper-{{ ai_gen_id }}">
      <div class="ai-broen-standard-carousel-{{ ai_gen_id }}" role="region" aria-label="The Broen Standard carousel">
        {% for i in (1..10) %}
          {% liquid
            assign card_enabled_key = 'card_' | append: i | append: '_enabled'
            assign card_image_key = 'card_' | append: i | append: '_image'
            assign card_video_key = 'card_' | append: i | append: '_video'
            assign card_title_key = 'card_' | append: i | append: '_title'
            assign card_subtext_key = 'card_' | append: i | append: '_subtext'
            assign card_button_text_key = 'card_' | append: i | append: '_button_text'
            assign card_link_key = 'card_' | append: i | append: '_link'

            assign card_enabled = block.settings[card_enabled_key]
            assign card_image = block.settings[card_image_key]
            assign card_video = block.settings[card_video_key]
            assign card_title = block.settings[card_title_key]
            assign card_subtext = block.settings[card_subtext_key]
            assign card_button_text = block.settings[card_button_text_key]
            assign card_link = block.settings[card_link_key]
          %}

          {% if card_enabled %}
            <a
              href="{{ card_link | default: '#' }}"
              class="ai-broen-standard-card-{{ ai_gen_id }}"
              data-card-index="{{ forloop.index0 }}"
              {% unless card_link %}onclick="return false;"{% endunless %}>
              <div class="ai-broen-standard-card-media-{{ ai_gen_id }}">
                {% if card_video != blank %}
                  <video
                    src="{{ card_video }}"
                    muted
                    loop
                    playsinline
                    preload="metadata"
                    onmouseenter="this.play()"
                    onmouseleave="this.pause()">
                  </video>
                {% elsif card_image != blank %}
                  <img
                    src="{{ card_image | image_url: width: 600 }}"
                    alt="{{ card_image.alt | escape }}"
                    loading="lazy"
                    width="600"
                    height="{{ 600 | divided_by: block.settings.media_aspect_ratio | round }}"
                  >
                {% else %}
                  <div class="ai-broen-standard-media-placeholder-{{ ai_gen_id }}">
                    {{ 'image' | placeholder_svg_tag }}
                  </div>
                {% endif %}
              </div>

              <div class="ai-broen-standard-card-content-{{ ai_gen_id }}">
                {% if card_title != blank %}
                  <h3 class="ai-broen-standard-card-title-{{ ai_gen_id }}">{{ card_title }}</h3>
                {% endif %}

                {% if card_subtext != blank %}
                  <p class="ai-broen-standard-card-subtext-{{ ai_gen_id }}">{{ card_subtext }}</p>
                {% endif %}

                {% if card_button_text != blank %}
                  <span class="ai-broen-standard-card-button-{{ ai_gen_id }}">{{ card_button_text }}</span>
                {% endif %}
              </div>
            </a>
          {% endif %}
        {% endfor %}
      </div>
    </div>

    <div class="ai-broen-standard-navigation-{{ ai_gen_id }}">
      <button
        class="ai-broen-standard-nav-button-{{ ai_gen_id }}"
        data-direction="prev"
        aria-label="Previous">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="15,18 9,12 15,6"></polyline>
        </svg>
      </button>

      <div class="ai-broen-standard-pagination-{{ ai_gen_id }}" role="tablist" aria-label="Carousel pagination"></div>

      <button
        class="ai-broen-standard-nav-button-{{ ai_gen_id }}"
        data-direction="next"
        aria-label="Next"
      >
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9,18 15,12 9,6"></polyline>
        </svg>
      </button>
    </div>
  </div>
</broen-standard-carousel-{{ ai_gen_id }}>

<script>
  (function() {
    class BroenStandardCarousel{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
        this.currentSlide = 0;
        this.totalSlides = 0;
        this.slidesPerView = 4;
        this.autoplayInterval = null;
      }

      connectedCallback() {
        this.carousel = this.querySelector('.ai-broen-standard-carousel-{{ ai_gen_id }}');
        this.cards = this.querySelectorAll('.ai-broen-standard-card-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('[data-direction="prev"]');
        this.nextButton = this.querySelector('[data-direction="next"]');
        this.pagination = this.querySelector('.ai-broen-standard-pagination-{{ ai_gen_id }}');

        this.totalSlides = this.cards.length;
        this.updateSlidesPerView();
        this.createPagination();
        this.setupEventListeners();
        this.updateCarousel();

        window.addEventListener('resize', () => this.updateSlidesPerView());
      }

      updateSlidesPerView() {
        if (window.innerWidth <= 768) {
          this.slidesPerView = 1;
        } else if (window.innerWidth <= 1024) {
          this.slidesPerView = 3;
        } else {
          this.slidesPerView = 4;
        }
        this.updateCarousel();
      }

      createPagination() {
        this.pagination.innerHTML = '';
        const totalPages = Math.ceil(this.totalSlides / this.slidesPerView);

        for (let i = 0; i < totalPages; i++) {
          const dot = document.createElement('button');
          dot.className = 'ai-broen-standard-dot-{{ ai_gen_id }}';
          dot.setAttribute('role', 'tab');
          dot.setAttribute('aria-label', `Go to slide ${i + 1}`);
          dot.addEventListener('click', () => this.goToSlide(i * this.slidesPerView));
          this.pagination.appendChild(dot);
        }
      }

      setupEventListeners() {
        this.prevButton.addEventListener('click', () => this.previousSlide());
        this.nextButton.addEventListener('click', () => this.nextSlide());

        this.carousel.addEventListener('touchstart', (e) => this.handleTouchStart(e), { passive: true });
        this.carousel.addEventListener('touchmove', (e) => this.handleTouchMove(e), { passive: true });
        this.carousel.addEventListener('touchend', () => this.handleTouchEnd(), { passive: true });

        document.addEventListener('keydown', (e) => {
          if (e.key === 'ArrowLeft') this.previousSlide();
          if (e.key === 'ArrowRight') this.nextSlide();
        });

        this.addEventListener('mouseenter', () => this.stopAutoplay());
        this.addEventListener('mouseleave', () => this.startAutoplay());
      }

      handleTouchStart(e) {
        this.touchStartX = e.touches[0].clientX;
      }

      handleTouchMove(e) {
        this.touchEndX = e.touches[0].clientX;
      }

      handleTouchEnd() {
        if (!this.touchStartX || !this.touchEndX) return;

        const difference = this.touchStartX - this.touchEndX;
        const threshold = 50;

        if (Math.abs(difference) > threshold) {
          if (difference > 0) {
            this.nextSlide();
          } else {
            this.previousSlide();
          }
        }

        this.touchStartX = null;
        this.touchEndX = null;
      }

      previousSlide() {
        if (window.innerWidth <= 768) {
          const cardWidth = this.cards[0]?.offsetWidth || 0;
          const gap = {{ block.settings.card_gap }};
          const cardWidthPlusGap = cardWidth + gap;
          this.carousel.scrollBy({ left: -cardWidthPlusGap, behavior: 'smooth' });
        } else {
          this.currentSlide = Math.max(0, this.currentSlide - this.slidesPerView);
          this.updateCarousel();
        }
      }

      nextSlide() {
        if (window.innerWidth <= 768) {
          const cardWidth = this.cards[0]?.offsetWidth || 0;
          const gap = {{ block.settings.card_gap }};
          const cardWidthPlusGap = cardWidth + gap;
          this.carousel.scrollBy({ left: cardWidthPlusGap, behavior: 'smooth' });
        } else {
          const maxSlide = Math.max(0, this.totalSlides - this.slidesPerView);
          this.currentSlide = Math.min(maxSlide, this.currentSlide + this.slidesPerView);
          this.updateCarousel();
        }
      }

      goToSlide(slideIndex) {
        this.currentSlide = Math.min(slideIndex, this.totalSlides - this.slidesPerView);
        this.updateCarousel();
      }

      updateCarousel() {
        if (window.innerWidth <= 768) {
          return;
        }

        const cardWidth = this.cards[0]?.offsetWidth || 0;
        const gap = {{ block.settings.card_gap }};
        const translateX = -(this.currentSlide * (cardWidth + gap));

        this.carousel.style.transform = `translateX(${translateX}px)`;

        this.prevButton.disabled = this.currentSlide === 0;
        this.nextButton.disabled = this.currentSlide >= this.totalSlides - this.slidesPerView;

        this.updatePagination();
      }

      updatePagination() {
        const dots = this.pagination.querySelectorAll('.ai-broen-standard-dot-{{ ai_gen_id }}');
        const currentPage = Math.floor(this.currentSlide / this.slidesPerView);

        dots.forEach((dot, index) => {
          dot.classList.toggle('active', index === currentPage);
          dot.setAttribute('aria-selected', index === currentPage);
        });
      }

      startAutoplay() {
        if ({{ block.settings.autoplay | json }} && {{ block.settings.autoplay_speed }} > 0) {
          this.autoplayInterval = setInterval(() => {
            if (this.currentSlide >= this.totalSlides - this.slidesPerView) {
              this.currentSlide = 0;
            } else {
              this.nextSlide();
            }
          }, {{ block.settings.autoplay_speed }} * 1000);
        }
      }

      stopAutoplay() {
        if (this.autoplayInterval) {
          clearInterval(this.autoplayInterval);
          this.autoplayInterval = null;
        }
      }
    }

    customElements.define('broen-standard-carousel-{{ ai_gen_id }}', BroenStandardCarousel{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "The Broen Standard",
  "tag": null,
  "settings": [
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "The Broen Standard"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#0a0a0a"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 60
    },
    {
      "type": "header",
      "content": "Section heading"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 24,
      "max": 60,
      "step": 2,
      "unit": "px",
      "label": "Heading size",
      "default": 36
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "subtext_color",
      "label": "Subtext color",
      "default": "#a0a0a0"
    },
    {
      "type": "color",
      "id": "card_background",
      "label": "Card background",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "button_color",
      "label": "Button color",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "button_text_color",
      "label": "Button text color",
      "default": "#000000"
    },
    {
      "type": "color",
      "id": "button_hover_color",
      "label": "Button hover color",
      "default": "#e0e0e0"
    },
    {
      "type": "header",
      "content": "Card typography"
    },
    {
      "type": "range",
      "id": "card_title_size",
      "min": 16,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Card title size",
      "default": 20
    },
    {
      "type": "range",
      "id": "card_subtext_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Card subtext size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Card style"
    },
    {
      "type": "range",
      "id": "card_border_radius",
      "min": 0,
      "max": 24,
      "step": 2,
      "unit": "px",
      "label": "Card border radius",
      "default": 12
    },
    {
      "type": "range",
      "id": "card_gap",
      "min": 8,
      "max": 40,
      "step": 4,
      "unit": "px",
      "label": "Gap between cards",
      "default": 20
    },
    {
      "type": "select",
      "id": "media_aspect_ratio",
      "label": "Media aspect ratio",
      "options": [
        {
          "value": "1",
          "label": "Square (1:1)"
        },
        {
          "value": "1.33",
          "label": "Landscape (4:3)"
        },
        {
          "value": "1.78",
          "label": "Widescreen (16:9)"
        },
        {
          "value": "0.75",
          "label": "Portrait (3:4)"
        }
      ],
      "default": "1.33"
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable autoplay",
      "default": false
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "min": 2,
      "max": 10,
      "step": 1,
      "unit": "s",
      "label": "Autoplay speed",
      "default": 5
    },
    {
      "type": "header",
      "content": "Card 1"
    },
    {
      "type": "checkbox",
      "id": "card_1_enabled",
      "label": "Enable card 1",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "card_1_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_1_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_1_title",
      "label": "Title",
      "default": "Premium Quality"
    },
    {
      "type": "textarea",
      "id": "card_1_subtext",
      "label": "Subtext",
      "default": "Crafted with the finest materials for lasting durability and exceptional performance."
    },
    {
      "type": "text",
      "id": "card_1_button_text",
      "label": "Button text",
      "default": "Learn More"
    },
    {
      "type": "url",
      "id": "card_1_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 2"
    },
    {
      "type": "checkbox",
      "id": "card_2_enabled",
      "label": "Enable card 2",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "card_2_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_2_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_2_title",
      "label": "Title",
      "default": "Innovative Design"
    },
    {
      "type": "textarea",
      "id": "card_2_subtext",
      "label": "Subtext",
      "default": "Modern aesthetics meet functional excellence in every product we create."
    },
    {
      "type": "text",
      "id": "card_2_button_text",
      "label": "Button text",
      "default": "Explore"
    },
    {
      "type": "url",
      "id": "card_2_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 3"
    },
    {
      "type": "checkbox",
      "id": "card_3_enabled",
      "label": "Enable card 3",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "card_3_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_3_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_3_title",
      "label": "Title",
      "default": "Sustainable Future"
    },
    {
      "type": "textarea",
      "id": "card_3_subtext",
      "label": "Subtext",
      "default": "Committed to environmental responsibility in every aspect of our manufacturing process."
    },
    {
      "type": "text",
      "id": "card_3_button_text",
      "label": "Button text",
      "default": "Discover"
    },
    {
      "type": "url",
      "id": "card_3_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 4"
    },
    {
      "type": "checkbox",
      "id": "card_4_enabled",
      "label": "Enable card 4",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "card_4_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_4_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_4_title",
      "label": "Title",
      "default": "Expert Craftsmanship"
    },
    {
      "type": "textarea",
      "id": "card_4_subtext",
      "label": "Subtext",
      "default": "Years of expertise and attention to detail in every product we deliver."
    },
    {
      "type": "text",
      "id": "card_4_button_text",
      "label": "Button text",
      "default": "View More"
    },
    {
      "type": "url",
      "id": "card_4_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 5"
    },
    {
      "type": "checkbox",
      "id": "card_5_enabled",
      "label": "Enable card 5",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "card_5_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_5_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_5_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "card_5_subtext",
      "label": "Subtext"
    },
    {
      "type": "text",
      "id": "card_5_button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "card_5_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 6"
    },
    {
      "type": "checkbox",
      "id": "card_6_enabled",
      "label": "Enable card 6",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "card_6_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_6_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_6_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "card_6_subtext",
      "label": "Subtext"
    },
    {
      "type": "text",
      "id": "card_6_button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "card_6_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 7"
    },
    {
      "type": "checkbox",
      "id": "card_7_enabled",
      "label": "Enable card 7",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "card_7_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_7_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_7_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "card_7_subtext",
      "label": "Subtext"
    },
    {
      "type": "text",
      "id": "card_7_button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "card_7_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 8"
    },
    {
      "type": "checkbox",
      "id": "card_8_enabled",
      "label": "Enable card 8",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "card_8_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_8_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_8_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "card_8_subtext",
      "label": "Subtext"
    },
    {
      "type": "text",
      "id": "card_8_button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "card_8_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 9"
    },
    {
      "type": "checkbox",
      "id": "card_9_enabled",
      "label": "Enable card 9",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "card_9_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_9_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_9_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "card_9_subtext",
      "label": "Subtext"
    },
    {
      "type": "text",
      "id": "card_9_button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "card_9_link",
      "label": "Link"
    },
    {
      "type": "header",
      "content": "Card 10"
    },
    {
      "type": "checkbox",
      "id": "card_10_enabled",
      "label": "Enable card 10",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "card_10_image",
      "label": "Image"
    },
    {
      "type": "url",
      "id": "card_10_video",
      "label": "Video URL"
    },
    {
      "type": "text",
      "id": "card_10_title",
      "label": "Title"
    },
    {
      "type": "textarea",
      "id": "card_10_subtext",
      "label": "Subtext"
    },
    {
      "type": "text",
      "id": "card_10_button_text",
      "label": "Button text"
    },
    {
      "type": "url",
      "id": "card_10_link",
      "label": "Link"
    }
  ],"presets": [
    {
      "name": "The Broen Standard"
    }
  ]
}
{% endschema %}